# slurm.conf file generated by configurator.html.
# Put this file on all nodes of your cluster.
# See the slurm.conf man page for more information.
#
# Workaround because Slurm does not recognize full hostname...
ControlMachine={{ pillar['slurm']['controller'] }}
#ControlAddr=
BackupController={{ pillar['slurm']['backupcontroller'] }}
#BackupAddr=
#
AuthType=auth/munge
CacheGroups=0
#CheckpointType=checkpoint/none
CryptoType=crypto/munge
#DisableRootJobs=NO
#EnforcePartLimits=NO
#Epilog=
#EpilogSlurmctld=
#FirstJobId=1
#MaxJobId=999999
#GresTypes=
#GroupUpdateForce=0
#GroupUpdateTime=600
#JobCheckpointDir=/var/slurm/checkpoint
JobCredentialPrivateKey=/etc/slurm-llnl/slurm.key
JobCredentialPublicCertificate=/etc/slurm-llnl/slurm.cert
#JobFileAppend=0
#JobRequeue=1
#JobSubmitPlugins=1
#KillOnBadExit=0
#Licenses=foo*4,bar
MailProg=/usr/bin/mail
MaxJobCount=25000
MaxArraySize=32000
#MaxStepCount=40000
#MaxTasksPerNode=128
MpiDefault=none
#MpiParams=ports=#-#
#PluginDir=
#PlugStackConfig=
#PrivateData=jobs
#PrologSlurmctld=
#PropagatePrioProcess=0
#PropagateResourceLimits=
#PropagateResourceLimitsExcept=
ReturnToService=2
#SallocDefaultCommand=
SlurmctldPidFile=/var/run/slurm-llnl/slurmctld.pid
SlurmctldPort=6817
SlurmdPidFile=/var/run/slurm-llnl/slurmd.pid
SlurmdPort=6818
SlurmdSpoolDir=/var/spool/slurm-llnl
SlurmUser=slurm
#SlurmdUser=root
#SrunEpilog=
#SrunProlog=
StateSaveLocation=/var/spool/slurm-llnl
SwitchType=switch/none
#TaskEpilog=
TaskPlugin=task/cgroup
TaskPluginParam=Sched
#TaskProlog=
#TopologyPlugin=topology/tree
#TmpFs=/tmp
#TrackWCKey=no
#TreeWidth=
#UnkillableStepProgram=
UsePAM=1
#
#
# TIMERS
#BatchStartTimeout=10
#CompleteWait=0
#EpilogMsgTime=2000
#GetEnvTimeout=2
#HealthCheckInterval=0
#HealthCheckProgram=
InactiveLimit=7200
KillWait=30
#MessageTimeout=10
#ResvOverRun=0
MinJobAge=300
#OverTimeLimit=0
SlurmctldTimeout=120
SlurmdTimeout=300
#UnkillableStepTimeout=60
#VSizeFactor=0
Waittime=0
#
#
# SCHEDULING
DefMemPerCPU=2048
FastSchedule=1
#MaxMemPerCPU=0
#SchedulerRootFilter=1
#SchedulerTimeSlice=30
SchedulerType=sched/builtin
SchedulerPort=7321
SelectType=select/cons_res
#SelectTypeParameters=CR_Core_Memory
SelectTypeParameters=CR_CPU_Memory
#
#
# JOB PRIORITY
PriorityType=priority/multifactor
PriorityDecayHalfLife=7-0
PriorityCalcPeriod=5
PriorityUsageResetPeriod=NONE
PriorityFavorSmall=YES
PriorityMaxAge=7-0
PriorityWeightAge=2000
PriorityWeightFairshare=10000
PriorityWeightJobSize=3000
PriorityWeightPartition=1000
PriorityWeightQOS=0
#
# QUEUE PRE-EMPTION SETTINGS
PreemptType=preempt/none
PreemptMode=OFF
#
# LOGGING AND ACCOUNTING
DefaultStorageType=slurmdbd
DefaultStorageUser={{ pillar['slurm']['db']['user'] }}
#DefaultStorageLoc=/var/log/slurm-llnl/job_completions.log
DefaultStorageHost={{ pillar['slurm']['controller'] }}
DefaultStoragePort=6819
AccountingStorageEnforce=associations,limits
#AccountingStorageHost=
#AccountingStorageLoc=/var/log/slurm-llnl/accounting.log
#AccountingStoragePass=
#AccountingStoragePort=
#AccountingStorageType=accounting_storage/filetxt
#AccountingStorageUser=
AccountingStoreJobComment=YES
ClusterName=biomediacluster
DebugFlags=Gres
#JobCompHost={{ pillar['slurm']['controller'] }}
#JobCompLoc=
#JobCompUser={{ pillar['slurm']['db']['user'] }}
#JobCompPass={{ pillar['slurm']['db']['password'] }}
#JobCompPort=
JobCompType=jobcomp/none
JobAcctGatherFrequency=30
JobAcctGatherType=jobacct_gather/linux
Proctracktype=proctrack/cgroup
#
SlurmctldDebug=info
SlurmctldLogFile=/var/log/slurm-llnl/slurmctld.log
SlurmdDebug=info
SlurmdLogFile=/var/log/slurm-llnl/slurm.log
SlurmSchedLogFile=/var/log/slurm-llnl/sched.log
#SlurmSchedLogLevel=
#
#
# POWER SAVE SUPPORT FOR IDLE NODES (optional)
#SuspendProgram=
#ResumeProgram=
#SuspendTimeout=
#ResumeTimeout=
#ResumeRate=
#SuspendExcNodes=
#SuspendExcParts=
#SuspendRate=
#SuspendTime=
#
#
# GRes configuration
GresTypes={{ ','.join(pillar['slurm']['gres']) }}
# COMPUTE NODES
{% for node, values in pillar['slurm']['nodes']['batch']['cpus'].items() %}
NodeName={{ node }} RealMemory={{ values.mem }} CPUs={{ values.cores }} State=UNKNOWN
{% endfor %}
{% for node, values in pillar['slurm']['nodes']['interactive']['cpus'].items() %}
NodeName={{ node }} RealMemory={{ values.mem }} CPUs={{ values.cores }} State=UNKNOWN
{% endfor %}
{% for node, values in pillar['slurm']['nodes']['batch']['gpus'].items() %}
NodeName={{ node }} RealMemory={{ values.mem }} CPUs={{ values.cores }} Gres={{ (values.gres.items()|join(',')).replace('(','').replace(')','').replace("', ",':').replace("'",'') }} State=UNKNOWN
{% endfor %}
{% for node, values in pillar['slurm']['nodes']['rocs']['cpus'].items() %}
NodeName={{ node }} RealMemory={{ values.mem }} CPUs={{ values.cores }} State=UNKNOWN
{% endfor %}
# Partitions
PartitionName=long Nodes={{ ','.join(pillar['slurm']['nodes']['batch']['cpus']) }} Default=YES MaxTime=43200
#PartitionName=short Nodes={{ ','.join(pillar['slurm']['nodes']['batch']['cpus']) }} Default=NO MaxTime=60 Priority=5000
PartitionName=gpus  Nodes={{ ','.join(pillar['slurm']['nodes']['batch']['gpus']) }} Default=NO MaxTime=10080 MaxCPUsPerNode=4 MaxMemPerNode=30720
#PartitionName=interactive Nodes={{ ','.join(pillar['slurm']['nodes']['interactive']['cpus']) }} Default=NO MaxTime=4320 Priority=7000 PreemptMode=OFF
PartitionName=interactive Nodes={{ ','.join(pillar['slurm']['nodes']['interactive']['cpus']) }} Default=NO MaxTime=8640 Priority=7000 PreemptMode=OFF
PartitionName=roclong Nodes={{ ','.join(pillar['slurm']['nodes']['rocs']['cpus']) }} Default=NO MaxTime=43200

#{% set rocsList = [] %}
#{% for node, values in pillar['slurm']['nodes']['batch']['cpus'].items() %} {% if node.startswith('roc') %} {% set rocsListTrash = rocsList.append(node) %} {% endif %} {% endfor %}

#PartitionName=rocsLong  Nodes={{ ','.join(rocsList) }} Default=NO MaxTime=43200
#PartitionName=rocsShort  Nodes={{ ','.join(rocsList) }} Default=NO MaxTime=60 Priority=5000

